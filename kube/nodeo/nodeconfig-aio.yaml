---
apiVersion: v1
kind: Namespace
metadata:
  name: nodeconfig
  labels:
    name: nodeconfig

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: node-operator
  namespace: nodeconfig
subjects:
- kind: ServiceAccount
  name: node-operator
  namespace: nodeconfig
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: node-operator
  namespace: nodeconfig

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: node-operator
  namespace: nodeconfig
spec:
  replicas: 1
  selector:
    matchLabels:
      name: node-operator
  template:
    metadata:
      labels:
        name: node-operator
    spec:
      serviceAccountName: node-operator
      containers:
        - name: node-operator
          # Replace this with the built image name
          image: elynn/node-operator:v0.0.1
          command:
          - node-operator
          imagePullPolicy: Always
          env:
            - name: WATCH_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: OPERATOR_NAME
              value: "node-operator"


---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: nodeconfigs.acm.vmware.com
spec:
  group: acm.vmware.com
  names:
    kind: NodeConfig
    listKind: NodeConfigList
    plural: nodeconfigs
    singular: nodeconfig
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: NodeConfig is the Schema for the nodeconfigs API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: NodeConfigSpec defines the desired state of NodeConfig
          properties:
            config:
              type: string
            image:
              type: string
            jobType:
              description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                Important: Run "operator-sdk generate k8s" to regenerate code after
                modifying this file Add custom validation using kubebuilder tags:
                https://book-v1.book.kubebuilder.io/beyond_basics/generating_crd.html'
              type: string
            nodeMatch:
              items:
                additionalProperties:
                  type: string
                type: object
              type: array
          required:
          - jobType
          type: object
        status:
          description: NodeConfigStatus defines the observed state of NodeConfig
          properties:
            jobs:
              items:
                type: string
              type: array
            reason:
              type: string
            stage:
              description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                of cluster Important: Run "operator-sdk generate k8s" to regenerate
                code after modifying this file Add custom validation using kubebuilder
                tags: https://book-v1.book.kubebuilder.io/beyond_basics/generating_crd.html'
              type: string
          required:
          - jobs
          - reason
          - stage
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
